@page "/Login"

@using global::Shared.DTOs
@using HttpClients.ClientInterfaces
@inject IUserService userService;
<h3>Login</h3>

<AuthorizeView>
    <NotAuthorized>
        <div class="card">
            <h3>Please login or register</h3>
            <div class="field">
                <label>Username:</label>
                <input type="text" @bind="username" @bind:event="oninput"/>
            </div>
            <div class="field">
                <label>Password:</label>
                <input type="password" @bind="password" @bind:event="oninput"/>
            </div>
            @if (!string.IsNullOrEmpty(errorLabel))
            {
                <div class="field">
                    <label style="color: red">
                        @errorLabel
                    </label>
                </div>
            }
            <div class="field">
                <button class="loginbtn" @onclick="LoginAsync">Log in</button>
            </div>
            <div class="field">
                            <button class="loginbtn" @onclick="RegisterAsync">Register</button>
                        </div>
        </div>
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Welcome, @context.User.Identity.Name</h3>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private string username;
    private string password;
    private string errorLabel;

    protected override void OnInitialized()
    {
        username = "";
        password = "";
        errorLabel = "";
       
    }
    
    private async Task LoginAsync()
    {
        errorLabel = "";
        try
        { 
            await userService.LoginAsync(username, password);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }

    private async Task RegisterAsync()
    {
        try
        {
            await userService.CreateAsync(new UserCreationDto(username, password));
            username = "";
            password = "";
            errorLabel = "";
        }
        catch (Exception e)
        {
            errorLabel = e.Message;
        }
    }
}