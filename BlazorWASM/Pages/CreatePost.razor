@page "/CreatePost"
@using global::Shared.DTOs
@using HttpClients.ClientInterfaces
@using System.Security.Claims
@using Microsoft.AspNetCore.Components
@inject IPostService PostService
@inject NavigationManager navMgr
@attribute [Authorize]
<h3>CreatePost</h3>

<AuthorizeView>
    <Authorized>
    <div class="card">


        <h3>Create a Post</h3>
        <div class="form-group field">
            <label>Title:</label>
            <input type="text" @bind="title" @bind:event="oninput"/>
        </div>
        <div class="form-group field">
            <label>Body: </label>
            <input type="text" @bind="body" @bind:event="oninput"/>
        </div>

        <div class="button-row">
            @if (!string.IsNullOrEmpty(resultMsg))
            {
                <label style="color: red">@resultMsg</label>
            }
             <button @onclick="Create" disabled="@(string.IsNullOrEmpty(username) && string.IsNullOrEmpty(body) && string.IsNullOrEmpty(username))" class="acceptbtn">Post</button>
        </div>
    </div>
    </Authorized>
</AuthorizeView>


@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    [Parameter]
    public string Subreddit { get; set; }

    private string title = "";
    private string body = "";
    private string username = "";

    private string resultMsg = "";
    private string color = "";

    private bool isLoggedIn;

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthState;
        ClaimsPrincipal user = authState.User;
        isLoggedIn = user.Identity != null;

        if (!isLoggedIn) return;
        username = user.Identity!.Name!;
    }

    private async Task Create()
    {
        resultMsg = "";

        try
        {
            await PostService.CreateAsync(new PostCreationDto(title,body,username));
            resultMsg = "Post successfully created";
            color = "green";
            navMgr.NavigateTo($"/ViewFullPost/{title}");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }
}